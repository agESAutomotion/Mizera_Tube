[PROMPT]
KEY_PARAX     =Öá²ÎÊı

DC_DACREF     =×î¸ßËÙ¶È¶ÔÓ¦Êä³öÄ£ÄâµçÑ¹ [V]

FIR_AUXE        =Gain Exponent [0..1]
FIR_AUXF        =ÂË²¨Ê±¼ä³£Êı 1 [s]
FIR_AUXG        =ÂË²¨Ê±¼ä³£Êı 2 [s]
FIR_AUXH        =¸úËæÎó²î²¹³¥ [0..1]
AP_EF_EQDELAY_TCONST=Servo equalization delay time constant [ms]
AP_FRICT_COMP_AMP   =Friction compensation peak amplitude [mm/min]
AP_FRICT_COMP_DECAY =Friction compensation decay time constant [s]
FIR_AUXA        =HDC system periodicity [°]
FIR_AUXB        =HDC system signal amplitude [°]
FIR_AUXC        =HDC system signal phase [°]
AP_EF_TCONST1   =Switching FIR time constant 1 [s]
AP_EF_TCONST2   =Switching FIR time constant 2 [s]
AP_EF_COMP_TCONST1  =Compensations FIR time constant 1 [s]
AP_EF_COMP_TCONST2  =Compensations FIR time constant 2 [s]
AP_EF_COMP_FIR2_TYPE=Compensations FIR 2nd stage type
AP_EF_COMP_FIR2_TYPE_L=0-FIR, 1-SINf
AP_BACK_AMP     =Backlash Compensation after FIR [mm]
POL_BACK_AMP    =Backlash Compensation after FIR [°]
AP_P2PBLEND_BUFFER_TIME =P2P blending buffering time [s]
AP_P2PBLEND_TIME        =P2P blending time threshold [s]
AP_P2PBLEND_SPACE       =P2P blending space threshold [mm]
POL_P2PBLEND_SPACE      =P2P blending space threshold [°]

AP_AXTYPELIST =0-Null, 1-Prop. STD, 2-Polar, 3-Round, 4-Poor, 10-SpEnc, 11-SpNoEnc, 20-N Speed, 22-OneVelAna, 30-Ram, 40-Measure
AP_AXTYPE     =Axis Type
AP_DRVTYPELIST =0-Analog, 1-Mechatrolink, 2-SERCOS, 3-CANOpen Trajectory, 4-CANOpen Positioning, 5-ESALINK
AP_DRVTYPE    =Interface  Type
AP_ROTARYMODELIST =0-Standard, 1-Rotary, 2-Geometry
AP_ROTARYMODE  =Ğı×ªÖáÄ£Ê½
AP_OPZIONI_EXT31_LIST=0-Real, 1-Virtual
AP_OPZIONI_EXT31     =Virtualization
AP_OPZ31_ALIAS_LIST  =0-Off, 1-On
AP_OPZ31_ALIAS       =Axis simulation
AP_NAME       =Ãû³Æ
AP_ACCTIME    =¼ÓËÙÊ±¼ä[s]
AP_DECTIME    =¼õËÙÊ±¼ä[s]
AP_OPZIONI0   =»ØÔ­µã·½ÏòÑ¡Ïî
AP_OPZIONI1   =±àÂëÆ÷¼ÆÊı·½ÏòÑ¡Ïî
AP_OPZIONI2   =Ä£ÄâÊä³ö·½ÏòÑ¡Ïî
AP_OPZIONI3   =½ûÖ¹Æ«²î±¨¾¯
AP_OPZIONI4   =½ûÖ¹µçÆ½µ÷Õû
AP_OPZIONI5   =½ûÖ¹Êµ¼ÊËÙ¶È³¬³öÖ¸¶¨ËÙ¶ÈÑ¡Ïî
AP_OPZIONI6   =Ó²ÏŞÎ»ÆôÓÃÑ¡Ïî
AP_OPZIONI7   =¶ÀÁ¢½ø¸øÂÊ
AP_OPZIONI8   =¹æ»®Ö±¾¶ÖáÑ¡Ïî
AP_OPZIONI9   =·´Ïò¼äÏ¶
AP_OPZIONI10  =¶Ïµç±£Áô×ø±êÖµ
AP_OPZIONI_EXT0=Declare homing complete even if incremental (AbsHoming)
AP_OPZIONI11  =DACÊä³öµçÑ¹Ñ¡Ïî
AP_OPZIONI12  =DACÊä³öµçÑ¹Õı¸ºÑ¡Ïî
AP_OPZIONI13  =¸ú´ÓÉ²³µÊ±¼äÆôÓÃ
AP_OPZIONI14  =Pos. Stop Man. via Input en. opt.
AP_OPZIONI15  =OnMotor Man. via PLC enab. opt.
AP_OPZIONI16  =PLC±Õ»·¿ØÖÆ²»ÆôÓÃ
AP_OPZIONI17  =Opt: F/R¹ÜÀí
AP_OPZIONI18  =Ó²ÏŞÎ»µÈ¼¶ÉèÖÃ
AP_OPZIONI19  =Opt: ¹ıÅ¤¾Ø±¨¾¯ÆôÓÃ
AP_OPZIONI20  =Opt: É²³µÖá
AP_OPZIONI21  =Opt: ½»²æÖáÇø¼ä²¹³¥
AP_OPZIONI22  =Opt: ËÅ·ş¹éÁã+Í£¿¿
AP_OPZIONI23  =Opt: Ç¿ÖÆÁãÆ®Öµ
AP_OPZIONI24  =Opt: µÈÀë×Ó¸î¾æµ÷Õû
AP_OPZIONI25  =Opt: ÁúÃÅÖá
AP_OPZIONI26  =Opt. µ½±ê¼ÇµÄ¾àÀë
AP_OPZIONI27  =Extended resolution 0.0001 [#mm] or [°]
AP_OPZIONI28  =Opt: zone cross-axes compensation 2
AP_OPZIONI31  =Ä£ÄâÖá
AP_FWERRVLIM  =¸úËæÎó²î¼«ÏŞËÙ¶È [mm/min]
AP_FWERR      =×î´ó¸úËæÎó²î[pulses]
AP_TOLLERG    =×î´ó¹«²î [mm]
AP_TOLLERF    =×îĞ¡¹«²î [mm]
AP_TOLLER     =¹«²î¸ú×Ù±£³ÖÊ±¼ä [s]
AP_VELMAX     =×î´óËÙ¶È [mm/min]
AP_VELRAP     =×î´ó¿ì½øËÙ¶È [mm/min]
AP_GAINP      =P ÔöÒæ
AP_GAIND      =D ÔöÒæ
AP_INFWD      =ÕıÏòËÙ¶È
AP_GAINP_I    =·´À¡ P ÔöÒæ
AP_INSPOS     =ÕıÏòËÀÇøµçÑ¹ [V]
AP_FATTCONV     =Number of encoder pulses/[#mm] (mul)
AP_FATTCONVDIV  =Number of encoder pulses/[#mm] (div)
AP_QFATTCONV    =Number of encoder pulses/[#mm] (mul)
AP_QFATTCONVDIV =Number of encoder pulses/[#mm] (div)
AP_QFATTCONVREDUCTION =Fatt.Conv adapter [#mm]/imp (num)
AP_QFATTCONVDIVREDUCTION =Fatt.Conv adapter [#mm]/imp (den)
AP_TARTYPE    =»ØÔ­µã·½Ê½
AP_SERCOSREF  =ËÅ·ş»ØÔ­µãÀàĞÍ
AP_CANOPENREF =CANOpen»ØÔ­µãÀàĞÍ
AP_SUBTARTYPE =»Ø²ÎÀàĞÍ
AP_INSNEG     =¸ºÏòËÀÇøµçÑ¹ [V]
AP_TARQUOTA   =»ØÔ­µã×ø±ê [mm]
AP_OFSQUOTA   =»Ø²ÎÆ«ÖÃ [mm]
AP_VELMICRO   =»ØÔ­µãËÙ¶È[mm/min]
AP_VELTACCA   =Åöµ½Ô­µã¿ª¹Øºó·µ»ØËÙ¶È [mm/min]
AP_MINQUOTA   =×îĞ¡ÈíÏŞÎ» [mm]
AP_MAXQUOTA   =×î´óÈíÏŞÎ» [mm]
AP_VELMAN     =ÊÖ¶¯ËÙ¶È [mm/min]
AP_ACCMAN     =Manual Acceleration (Jog Rtcp) [mm/s²]
AP_DECMAN     =Manual Deceleration (Jog Rtcp) [mm/s²]
AP_JRKMAN     =Manual Jerk (Jog Rtcp) [mm/s³]
AP_VELPARK    =Í£¿¿ËÙ¶È [mm/min]
AP_VELDRY     =¼±ËÙËÙ¶È [mm/min]
AP_TOLLG_VEL  =Coarse tolerance velocity threshold [mm/min]
AP_TOLLF_VEL  =Fine tolerance velocity threshold [mm/min]
AP_BABBLE_VEL =Tolerance after HOLD/RESET [mm/min]
AP_ESTOP_TIMER=¼±Í£ºóÇı¶¯Ê¹ÄÜÆôÓÃÊ±¼ä [s]
AP_JOGABS_QMIN=¿ÉÑ¡µÄÏÂ²¿¾ø¶ÔÏŞÎ» [mm]
AP_JOGABS_QMAX=¿ÉÑ¡µÄÉÏ²¿¾ø¶ÔÏŞÎ» [mm]
AP_JOGTCP_QMIN=¿ÉÑ¡µÄÏÂ²¿ TCP ÏŞÎ» [mm]
AP_JOGTCP_QMAX=¿ÉÑ¡µÄÉÏ²¿ TCP ÏŞÎ» [mm]
AP_MINICS     =Ñ²º½Ê±¼ä³£Êı [mm/min]
AP_ICSTIME    =¸¨ÖúÊ±¼ä³£Êı [s]
AP_DELAYS     =»ı·ÖÊ±¼ä [s]
AP_QCHKTARA   =»ØÔ­µã±¨¾¯³¤¶È[mm]
AP_TIPOTSTENC =±àÂëÆ÷²âÊÔÀàĞÍ
AP_OFFSET     =×î´óÔÊĞíÁãÆ¯µçÑ¹ [V]
AP_TIMEOFF    =ÁãÆ¯»Ö¸´Ê±¼ä[s]
AP_RECQTA     =·´Ïò¼äÏ¶ [mm]
AP_PARKQTA    =Í£¿¿Ä¿±ê [mm]
AP_EMERTIME   =¼±Í£Ê±¼äÇúÏß [s]
AP_AXMOD      =¼«×ø±êÖá¼ÆÊı·½Ê½
AP_QTARECG    =µ¥Ïò¶¨Î»¾àÀë [mm]
AP_TYPERECG   =µ¥Ïò¶¨Î»ÀàĞÍ
AP_TIMCOMDIR  =·´ÏòÊ±¼ä [s]
AP_INERZAV    =Ç°½ø¹ßĞÔ¾àÀë [mm]
AP_INERZIND   =ºóÍË¹ßĞÔ¾àÀë [mm]
AP_TIMERFRENO =É²³µ¶¨Ê± [s]
AP_AXNZONE    =ÇøÓò²¹³¥±í
AP_AXNZONE_REV=ÇøÓò²¹³¥±í·´Ïò(opt)
AP_AXNZONE2   =ÇøÓò²¹³¥±í2
AP_AXNZONE2_REV=ÇøÓò²¹³¥±í2·´Ïò(opt
AP_TIMEREG    =Öá¿ØÖÆÔöĞ§
AP_CZSPECIAL  =ÌØÊâ²¹³¥Ä£Ê½
AP_CZSPECIAL_L=0-No, 1-Rcss1.ZH, 2-Rcss1.ZL, 3-Rcss2.Z, 4-Rcss2.X,
AP_CZMASTER   =½»²æÖáÖ÷ÒªÖá²¹³¥±í
AP_CZMASTER2  =½»²æÖáÖ÷ÒªÖá²¹³¥±í2
AP_ACCEL      =×î´ó¼ÓËÙ¶È[mm/s]
AP_DECEL      =×î´ó¼õËÙ¶È [mm/s]
AP_JERK       =×î´ó jerk [mm/s]
AP_EMERDEC    =½ô¼±Í£Ö¹¼õËÙ¶È [mm/s]
AP_KPGAIN     =Kp ÔöÒæ [1/s]
AP_KDGAIN     =Kd ÔöÒæ
AP_KVFFGAIN   =Kvff ÔöÒæ
AP_KPGAIN_I   =ºóÍËKpÔöÒæ[1/s]
AP_SSERRK     =×î´óK¸úËæÎó²î
AP_SSERR      =×î´ó¸úËæÎó²î/¹«²î [mm]
AP_MAXSPEEDLIM=Max speed demand [%]
AP_OFFSETDAC  =DACÁãÆ®Öµ [V]
AP_AXNTORCIA  =µÈÀë×Ó¸î¾æ±í
AP_AXNGANTRY  =ÁúÃÅÖá±í
AP_SCALING    =ÄÚ²¿½âÎö¶È[#um]
AP_CAL_ADC1   =µçÎ»¼ÆĞ£×¼- AµãDAÖµ
AP_CAL_QTA1   =µçÎ»¼ÆĞ£×¼- Aµã²âÁ¿Öµ [mm]
AP_CAL_ADC2   =µçÎ»¼ÆĞ£×¼- BµãDAÖµ
AP_CAL_QTA2   =µçÎ»¼ÆĞ£×¼- Bµã²âÁ¿Öµ [mm]
AP_TORQUE     =Á¦¾Ø¼õÉÙÖµ[%]
AP_MATCHING_CHAN=³õÊ¼Æ¥ÅäÍ¨µÀ
AP_AXNZONE3   =Zone compensation table index 3
AP_AXNZONE3_REV=Zone compensation table index 3 for reverse run (opz)
AP_CZMASTER3  =Cross-axes compens. master axis index 3
AP_OPZIONI29  =Opz: zone cross-axes compensation 3
AP_AXNZONE4   =Zone compensation table index 4
AP_AXNZONE4_REV=Zone compensation table index 4 for reverse run (opz)
AP_CZMASTER4  =Cross-axes compens. master axis index 4
AP_OPZIONI30  =Opz: zone cross-axes compensation 4
AP_1_CZMASTER =Cross-axes compens. master axis index (2nd dimension)
AP_2_CZMASTER =Cross-axes compens. master axis index (3rd dimension)
AP_1_CZMASTER2=Cross-axes compens. master axis index 2 (2nd dimension)
AP_2_CZMASTER2=Cross-axes compens. master axis index 2 (3rd dimension)
AP_1_CZMASTER3=Cross-axes compens. master axis index 3 (2nd dimension)
AP_2_CZMASTER3=Cross-axes compens. master axis index 3 (3rd dimension)
AP_1_CZMASTER4=Cross-axes compens. master axis index 4 (2nd dimension)
AP_2_CZMASTER4=Cross-axes compens. master axis index 4 (3rd dimension)
AP_OPZIONI_EXT1=Do not initialize zone correction at boot

POL_FWERRVLIM  =¸úËæÎó²î¼«ÏŞËÙ¶È [°/min]
POL_TOLLERG    =×î´ó¹«²î [°]
POL_TOLLERF    =×îĞ¡¹«²î [°]
POL_VELMAX     =×î´óËÙ¶È [m/min]
POL_VELRAP     =×î´ó¼±ËÙËÙ¶È [?min]
POL_FATTCONV     =Number of encoder pulses/° (num)
POL_FATTCONVDIV  =Number of encoder pulses/° (den)
POL_QFATTCONV    =Number of encoder pulses/° (num)
POL_QFATTCONVDIV =Number of encoder pulses/° (den)
POL_TARQUOTA   =»ØÔ­µã×ø±ê [°]
POL_VELMICRO   =ÕÒÔ­µã¿ª¹ØËÙ¶È[°/min]
POL_VELTACCA   =ÕÒ±àÂëÆ÷Ô­µãËÙ¶È [°/min]
POL_MINQUOTA   =×îĞ¡ÈíÏŞÎ»
POL_MAXQUOTA   =×î´óÈíÏŞÎ»
POL_VELMAN     =ÊÖ¶¯ËÙ¶È [°/min]
POL_ACCMAN     =Manual Acceleration (Jog Rtcp) [°/s²]
POL_DECMAN     =Manual Deceleration (Jog Rtcp) [°/s²]
POL_JRKMAN     =Manual Jerk (Jog Rtcp) [°/s³]
POL_VELPARK    =Í£¿¿ËÙ¶È [°/min]
POL_VELDRY     =¼±ËÙËÙ¶È [°/min]
POL_TOLLG_VEL  =Coarse tolerance velocity threshold [°/min]
POL_TOLLF_VEL  =Fine tolerance velocity threshold [°/min]
POL_BABBLE_VEL =Tolerance after HOLD/RESET [°/min]
POL_JOGABS_QMIN=¿ÉÑ¡µÄÏÂ²¿¾ø¶ÔÏŞÎ» [°]
POL_JOGABS_QMAX=¿ÉÑ¡µÄÉÏ²¿¾ø¶ÔÏŞÎ» [°]
POL_QCHKTARA   =»ØÔ­µã±¨¾¯³¤¶È [°]
POL_RECQTA     =·´Ïò±³Ï¶²¹³¥[°]
POL_PARKQTA    =Í£Ö¹Î»ÖÃ[°]
POL_QTARECG    =±³Ï¶²¹³¥ [°]
POL_ACCEL      =×î´ó¼ÓËÙ¶È
POL_DECEL      =×î´ó¼õËÙ¶È
POL_JERK       =×î´ó jerk
POL_EMERDEC    =¼±Í£¼õËÙ¶È
POL_KPGAIN     =Kp ÔöÒæ[1/s]
POL_KDGAIN     =Kd ÔöÒæ
POL_KVFFGAIN   =Kvff ÔöÒæ
POL_SSERRK     =K ×î´ó¸úËæÎó²î
POL_SSERR      =×î´ó¸úËæÎó²î

SP_ACCTIME    =¼ÓËÙÊ±¼ä [s]
SP_DECTIME    =¼õËÙÊ±¼ä [s]
SP_DELAYS     =SÇúÏßÊ±¼ä [s]
SP_OPZIONI0   =»ØÔ­µã·½Ïò·´Ïò
SP_OPZIONI1   =±àÂëÆ÷¼ÇÊı·´Ïò
SP_OPZIONI2   =Ä£ÄâÊä³ö·´Ïò
SP_OPZIONI3   =½ûÖ¹Æ«²î±¨¾¯
SP_OPZIONI4   =½ûÖ¹µçÆ½µ÷Õû
SP_OPZIONI9   =Opt: ¼äÏ¶²¹³¥·´Ïò
SP_OPZIONI10  =¶Ïµç±£Áô×ø±êÖµ
SP_OPZIONI11  =DACÊä³öµçÑ¹Ñ¡Ïî
SP_OPZIONI12  =DACÊä³öµçÑ¹Õı¸ºÑ¡Ïî
SP_OPZIONI15  =OnMotor Man. via PLC enab. opt.
SP_OPZIONI31  =Ä£ÄâÖá
SP_FWERRVLIM  =¸úËæÎó²î¼«ÏŞËÙ¶È [rpm]
SP_FWERR      =×î´ó¸úËæÎó²î [pulses]
SP_TOLLERG    =¿ìËÙ¶¨Î»¹«²î [°]
SP_TOLLERF    =¾«È·¶¨Î»¹«²î [°]
SP_TOLLER     =±£³ÖÊ±¼ä[s]
SP_VELMAX     =×î´ó×ªËÙ[rpm]
SP_VELRAP     =×î´ó¼±ËÙĞı×ªËÙ¶È [rpm]
SP_GAINP      =P ÔöÒæ
SP_GAIND      =D ÔöÒæ
SP_INFWD      =Ç°½ø½ø¸ø
SP_INSPOS     =ÕıÏòËÀÇøµçÑ¹ [V]
SP_FATTCONV   =Ã¿È¦±àÂëÆ÷Âö³åÊı
SP_TARTYPE    =»ØÔ­µã·½Ê½
SP_INSNEG     =¸ºÏòËÀÇøµçÑ¹ [V]
SP_RECQTA     =¼äÏ¶²¹³¥Öµ [°]
SP_TARQUOTA   =»ØÔ­µã×ø±ê (¶È)
SP_VELMICRO   =ÕÒÔ­µã¿ª¹ØËÙ¶È[rpm]
SP_VELTACCA   =ÕÒ±àÂëÆ÷Ô­µãËÙ¶È [rpm]
SP_VEL10V     =10 ·ü¶ÔÓ¦Âí´ïËÙ¶È[rpm]
SP_ENCTYPE    =±àÂëÆ÷»úĞµÁ¬½ÓÀàĞÍ
SP_N1         =1¼¶´«¶¯±È
SP_N2         =2¼¶´«¶¯±È
SP_N3         =3¼¶´«¶¯±È
SP_N4         =4¼¶´«¶¯±È
SP_VELND      =Ñ°ÏßËÙ¶È[rpm]
SP_VELLIM1    =1¼¶¼«ÏŞËÙ¶È[rpm]
SP_VELLIM2    =2¼¶¼«ÏŞËÙ¶È[rpm]
SP_VELLIM3    =3¼¶¼«ÏŞËÙ¶È[rpm]
SP_VELLIM4    =4¼¶¼«ÏŞËÙ¶È[rpm]
SP_VELLTOL    =È«ËÙÂÊ¹«²î(%)
SP_FLT        =×î´ó²¨¶¯(%)
SP_VELMIN     =×îĞ¡¸¡¶¯ËÙ¶È[rpm]
SP_VELSTOP    =Ö÷ÖáÎÈ¶¨ËÙ¶È(%)
SP_VELJOG     =Ö÷ÖáÊÖ¶¯ËÙ¶È[rpm]
SP_VELM19     =Ö÷Öá¶¨Î»ËÙ¶È[rpm]
SP_EMERTIME   =¼±Í£Ê±¼äÇúÏß[s]
SP_TIMEREG    =Öá¿ØÖÆÔöĞ§
SP_TIPOTSTENC =±àÂëÆ÷²âÊÔÀàĞÍ
SP_QCHKTARA   =»Ø²Î±¨¾¯½Ç¶È[°]
SP_ACCEL      =×î´ó¼ÓËÙ¶È[rev/s²]
SP_DECEL      =×î´ó¼õËÙ¶È[rev/s²]
SP_JERK       =×î´óJerk [rev/s³]
SP_EMERDEC    =¼±Í£¼õËÙ¶È[rev/s²]
SP_KPGAIN     =Kp ÔöÒæ [1/s]
SP_KDGAIN     =Kd ÔöÒæ
SP_KVFFGAIN   =Kvff ÔöÒæ
SP_SSERRK     =×î´óK¸úËæÎó²î
SP_SSERR      =×î´ó¸úËæÎó²î/¹«²î [rev]
SP_VELMIN1    =1¼¶×îĞ¡ËÙ¶È[rpm]
SP_VELMIN2    =2¼¶×îĞ¡ËÙ¶È[rpm]
SP_VELMIN3    =3¼¶×îĞ¡ËÙ¶È[rpm]
SP_VELMIN4    =4¼¶×îĞ¡ËÙ¶È[rpm]
SP_TPACC      =Ñ°Ïß¼ÓËÙÊ±¼ä[s]
SP_TPAVA      =Ñ°ÏßÇ°½øÊ±¼ä[s]
SP_TPIND      =Ñ°ÏßºóÍËÊ±¼ä[s]
SP_REVO_HR    =[Rev]ºÍ[RPM]·Ö±æÂÊÎª0.001

SP_VELMAX_HR    =×î´óĞı×ªËÙ¶È [rpm]
SP_VELRAP_HR    =×î´ó¼±ËÙĞı×ªËÙ¶È [rpm]
SP_VELMICRO_HR  =»Ø²Î¿¼µãËÙ¶È [rpm]
SP_VELTACCA_HR  =ÁãĞÅºÅËÙ¶È [rpm]
SP_VELND_HR     =ËÑË÷ËÙ¶È [rpm]
SP_VELLIM1_HR   =1¼¶¼«ÏŞËÙ¶È [rpm]
SP_VELLIM2_HR   =2¼¶¼«ÏŞËÙ¶È [rpm]
SP_VELLIM3_HR   =3¼¶¼«ÏŞËÙ¶È [rpm]
SP_VELLIM4_HR   =4¼¶¼«ÏŞËÙ¶È [rpm]
SP_VELMIN_HR    =Min. speed for fluct. monit. [rpm]
SP_VELJOG_HR    =Ö÷ÖáÊÖ¶¯ËÙ¶È [rpm]
SP_VELM19_HR    =Ö÷Öá¶¨Î»ËÙ¶È [rpm]
SP_VELMIN1_HR   =1¼¶×îĞ¡ËÙ¶È [rpm]
SP_VELMIN2_HR   =2¼¶×îĞ¡ËÙ¶È [rpm]
SP_VELMIN3_HR   =3¼¶×îĞ¡ËÙ¶È [rpm]
SP_VELMIN4_HR   =4¼¶×îĞ¡ËÙ¶È [rpm]
SP_ACCEL_HR     =×î´ó¼ÓËÙ¶È [rev/s²]
SP_DECEL_HR     =×î´ó¼õËÙ¶È [rev/s²]
SP_JERK_HR      =×î´ó jerk [rev/s³]
SP_EMERDEC_HR   =¼±Í£¼õËÙ¶È [rev/s²]

NV_OPZIONI0   =»ØÔ­µã·½ÏòÑ¡Ïî
NV_OPZIONI1   =±àÂëÆ÷¼ÆÊı·½ÏòÑ¡Ïî
NV_OPZIONI3   =½ûÖ¹Æ«²î±¨¾¯
NV_OPZIONI4   =½ûÓÃµçÆ½µ÷Õû
NV_OPZIONI5   =½ûÓÃµçÑ¹¼àÊÓ
NV_OPZIONI6   =Ó²ÏŞÎ»ÆôÓÃÑ¡Ïî
NV_OPZIONI13  =¸úËæÉ²³µÊ±¼äÆôÓÃ
NV_OPZIONI13  =Slave brake timing man. en. opt
NV_OPZIONI14  =Pos. stop man. via input enab. opt.
NV_OPZIONI18  =Ó²ÏŞÎ»µÈ¼¶ÉèÖÃ
NV_OPZIONI26  =Opt. µ½±ê¼ÇµÄ¾àÀë
NV_OPZIONI31  =ÔÊĞíÄ£ÄâÖá
NV_TOLLERG    =¿ìËÙ¹«²î [mm]
NV_TOLLER     =¹«²îÊ±¼ä [s]
NV_VELMAX     =×î´óËÙ¶È
NV_FATTCONV     =Number of encoder pulses/[#mm] (mul)
NV_FATTCONVDIV  =Number of encoder pulses/[#mm] (div)
NV_QFATTCONV    =Number of encoder pulses/[#mm] (mul)
NV_QFATTCONVDIV =Number of encoder pulses/[#mm] (div)
NV_TARTYPE    =»ØÔ­µã·½Ê½
NV_TARQUOTA   =Ô­µã×ø±ê [mm]
NV_VELMICRO   =»ØÔ­µãËÙ¶È
NV_VELTACCA   =Åöµ½Ô­µã¿ª¹ØºóËÙ¶È
NV_MINQUOTA   =×îĞ¡ÈíÏŞÎ» [mm]
NV_MAXQUOTA   =×î´óÈíÏŞÎ» [mm]
NV_VELMAN     =ÊÖ¶¯ËÙ¶È
NV_VELPARK    =Í£¿¿ËÙ¶È
NV_QCHKTARA   =»ØÔ­µã±¨¾¯¾àÀë [mm]
NV_TIPOTSTENC =±àÂëÆ÷²âÊÔÀàĞÍ
NV_PARKQTA    =Í£¿¿Ä¿±ê [mm]
NV_DECV1AVA   =V2->V1 Ç°½ø±äËÙµã [mm]
NV_DECV2AVA   =V3->V2 Ç°½ø±äËÙµã [mm]
NV_DECV1IND   =V2->V1 ºóÍË±äËÙµã [mm]
NV_DECV2INV   =V3->V2 ºóÍË±äËÙµã [mm]
NV_DECSOGV1   =V2->V1 ±ä¼«ÏŞÄ¿±ê [mm]
NV_DECSOGV2   =V3->V2 ±ä¼«ÏŞÄ¿±ê [mm]
NV_TIMCOMVEL  =ËÙ¶È±ä»»¶¨Ê± [s]
NV_TIMCOMDIR  =·½Ïò±ä»»¶¨Ê± [s]
NV_QTARECG    =µ¥Ïò¾àÀë [mm]
NV_TYPERECG   =µ¥Ïò·½Ê½
NV_INERZAV    =¹ßĞÔÇ°½ø¾àÀë [mm]
NV_INERZIND   =¹ßĞÔºóÍË¾àÀë[mm]
NV_TIMERFRENO =É²³µ¶¨Ê±¹ÜÀí [s]
NV_TIMEREG    =Öá¿ØÖÆ»ı·Ö

PT_ACCTIME    =¼ÓËÙÊ±¼ä [s]
PT_DECTIME    =¼õËÙÊ±¼ä [s]
PT_OPZIONI0   =»ØÔ­µã·½ÏòÑ¡Ïî
PT_OPZIONI1   =±àÂëÆ÷¼ÆÊı·½ÏòÑ¡Ïî
PT_OPZIONI2   =Ä£ÄâÊä³ö·½ÏòÑ¡Ïî
PT_OPZIONI3   =½ûÖ¹Æ«²î±¨¾¯
PT_OPZIONI4   =Mark level monitoring disab. opt.
PT_OPZIONI5   =SLV commands VOUT disabling opt.
PT_OPZIONI6   =Hardware limits enabling option
PT_OPZIONI9   =Play adj. direct. rev. option
PT_OPZIONI10  =ABSOLUTE sizing enabling option
PT_OPZIONI11  =DACÊä³öµçÑ¹Ñ¡Ïî
PT_OPZIONI12  =DACÊä³öµçÑ¹Õı¸ºÑ¡Ïî
PT_OPZIONI13  =¸úËæÉ²³µÊ±¼äÆôÓÃ
PT_OPZIONI14  =Pos. stop Man. via Input en. opt.
PT_OPZIONI15  =OnMotor Man. via PLC enab. option
PT_OPZIONI16  =ÊÖ¶¯±Õ»·¿ØÖÆ
PT_OPZIONI18  =Ó²ÏŞÎ»µÈ¼¶ÉèÖÃ
PT_OPZIONI31  =Ä£ÄâÖá
PT_FWERRVLIM  =¸úËæÎó²î¼«ÏŞËÙ¶È[mm/min]
PT_FWERR      =×î´ó¸úËæÎó²î[pulses]
PT_TOLLERG    =¿ìËÙ¶¨Î»¹«²î[mm]
PT_TOLLERF    =¾«È·¶¨Î»¹«²î[mm]
PT_TOLLER     =±£³ÖÊ±¼ä[s]
PT_VELMAX     =×î´ó½ø¸øËÙ¶È[mm/min]
PT_VELRAP     =×î´ó¼±ËÙËÙ¶È [mm/min]
PT_GAINP      =P ÔöÒæ
PT_GAIND      =D ÔöÒæ
PT_GAINFWD    =Ç°½ø½ø¸ø
PT_INSPOS     =ÕıÏòËÀÇøµçÑ¹ [V]
PT_FATTCONV     =Number of encoder pulses/[#mm] (mul)
PT_FATTCONVDIV  =Number of encoder pulses/[#mm] (div)
PT_QFATTCONV    =Number of encoder pulses/[#mm] (mul)
PT_QFATTCONVDIV =Number of encoder pulses/[#mm] (div)
PT_TARTYPE    =»Ø²ÎÀàĞÍ
PT_INSNEG     =¸ºÏòËÀÇøµçÑ¹(V)
PT_TARQUOTA   =²Î¿¼×ø±ê[mm]
PT_VELMICRO   =»Ø²ÎËÙ¶È[mm/min]
PT_VELTACCA   =Ñ°ÁãËÙ¶È[mm/min]
PT_MINQUOTA   =×îĞ¡¼«ÏŞ[mm]
PT_MAXQUOTA   =×î´ó¼«ÏŞ[mm]
PT_VELMAN     =ÊÖ¶¯ËÙ¶È[mm/min]
PT_VELPARK    =Í£¿¿ËÙ¶È [mm/min]
PT_PARKQTA    =Í£¿¿Ä¿±ê[mm]
PT_EMERTIME   =¼±Í£Ê±¼äÇúÏß[s]
PT_TIMEREG    =Öá¿ØÖÆÔöĞ§
PT_TIPOTSTENC =±àÂëÆ÷²âÊÔÀàĞÍ
PT_ACCEL      =×î´ó¼ÓËÙ¶È[mm/s²]]
PT_DECEL      =×î´ó¼õËÙ¶È[mm/s²]]
PT_EMERDEC    =¼±Í£¼õËÙ¶È[mm/s²]]
PT_KPGAIN     =KpÔöÒæ [1/s]
PT_KDGAIN     =KdÔöÒæ
PT_KVFFGAIN   =KvffÔöÒæ
PT_SSERRK     =×î´óK¸úËæÎó²î
PT_SSERR      =×î´ó¸úËæÎó²î/¹«²î[mm]

AP_DECHOLD    =Max. hold deceleration [mm/s²]
POL_DECHOLD   =Max. hold deceleration [°/s²]
SP_DECHOLD    =Max. hold deceleration [rev/s²]
SP_DECHOLD_HR =Max. hold deceleration [rev/s²]
PT_DECHOLD    =Max. hold deceleration [mm/s²]

[HELP]
FIR_AUXF        =This filter time constant, expressed in s, is working on the related axis reducing vibration due to acceleration spikes.  The filtering introduces however a trajectory error. Higher is the filter value,  bigger is the path error introduced.  The filter  is disabled setting it to 0.   Typical values : \n 0.06 s in case of high stiffness machines (that can work with  Kp > 30) ,  \n 0,18 s in case of normal  machines. \n  It must be used together with the "Filter Time Constant 2" that is normally set to  a value three times lower.
FIR_AUXG        =This filter time constant, expressed in s, is working on the related axis reducing vibration due to acceleration spikes.  The filtering introduces however a trajectory error. Higher is the filter value,  bigger is the path error introduced.  The filter  is disabled setting it to 0.   Typical values : \n 0.02 s in case of stiff machines (that can work with  Kp > 30) ,  \n 0,06 s in case of normal  machines. \n  It must be used together with the "Filter Time Constant 1" that is normally set to a value three times bigger.
FIR_AUXH        =This parameter has a meaning only if the Filters Time Constant 1 and 2 have been setted. It has the same effect of Velocity Feed Forward reducing the Axis Following  Error. As KVff can assume values in the range (0..1) with 0 disabled and 1 max effect.

DC_DACREF     =Reference output voltage [V] which is to be supplied to the servodrive to obtain the maximum speed as it has been set up in the appropriate parameter.

AP_NAME       =Symbolic name given to the axis. it has no effect on axis functionality, it is usufull on search operation.
AP_AXTYPE     =Type of Axis: 1-Proportional 2-Polar 3-Round 4-Poor Proportional 10-Spindle with Enc 11-Spindle without Enc 20-N Speed Standard 22-OneVelAna, 30-Ram 40-measure equipment
AP_DRVTYPE    =Drive type: 0-Analog 1-Digital (Yaskawa mechatrolink-compliant Servopack), 2-SERCOS, 3-CANOpen Trajectory, 4-CANOpen Positioning
AP_ACCTIME    =Time required to reach VLim =VMax
AP_DECTIME    =Time required to pass from VLim to V =0
AP_OPZIONI0   =Sizing direction reversal option: 0-(Default) FORWARD SET-POINT - CNC will wait for slow down switch to be reached moving the axis backward, then wait for BOTH the same switch to be released AND the encoder 0-notch to be reached moving the axis forward.  1- BACKWARD SET-POINT:  The same as in FORWARD SET-POINT but considering all axis movements exchanged.
AP_OPZIONI1   =Counting direction reversal option: 0-Default 1-inverts the counting direction of the encoder
AP_OPZIONI2   =Analog sign reversal option: 0- Default  1- inverts motor-tachymetry connection
AP_OPZIONI3   =Tolerance alarm disabling option: if this option is set, it inhibits alarm generation if the axis terminates its position without complying with the tolerance value
AP_OPZIONI4   =Marker level control disabling option: Not Used
AP_OPZIONI5   =VOUT disabling option for SLV commands: to set if verification that the processing speed set by the program does not exceed the dynamic limits of the axes has been accomplished externally
AP_OPZIONI6   =Hardware limit enabling option: to set if the signals of the limit switches supplied by the PLC are used to set the axis to the blocked status
AP_OPZIONI7   =Independent feed-rate handling: set to 1 to enable a feed-rate on a per-axis basis during non-interpolated traverse operation;  set to 0 for compatibility.
AP_OPZIONI8   =Diametral programming enabling option: if a lathe is being used, this allows the axis in question to be defined as diametral axis of the lathe - the targets entered in the PP must be considered as diametral
AP_OPZIONI9   =Play adjustment direction reversal option: if set, inverts the play adjustment direction which will be in keeping with the sizing direction by default
AP_OPZIONI10  =ABSOLUTE sizing enabling option: if set, the sizing target will coincide with the last target sampled
AP_OPZIONI11  =DAC_POS +/- 0/10V management enabling option: if set, the DAC converter will always supply positive voltage values within the 0..+10 range and the sign in a programmed digital output (1 has the meaning of +, 0 has the meaning of -)
AP_OPZIONI12  =DAC POS bit sign reversal option:  when set to 1, the meaning of the sign bit is inverted, thus, 0 means + and 1 means -
AP_OPZIONI13  =Slave Brake Timing Management enabling option: 0-(Default) - brake timing is managed by the PLC 1- brake timing is managed by the slave
AP_OPZIONI14  =Bumper Management via Input enabling option: 0-(Default) - the input is managed by the PLC 1-The input is managed by the slave
AP_OPZIONI15  =OnMotor management via PLC enabling option: 0 - (Default) - the drive is enabled by the Slave 1- The handling of the Torque Enable signal is completely up to PLC.
AP_OPZIONI16  =Close Loop via PLC disabling option: 0- Default - ORDM M_CHAN handshake 1-The Slave does not wait for the handshake from the PLC to torque the axis when this must be moved (PressBend)
AP_OPZIONI17  =DAC_POS Management enabling option for drives requiring 2 direction bits (forward-running and backward-running) to define in the axis configuration data. ON_MOTOR must not be configured (Reg =0 Bit =0)
AP_OPZIONI18  =Hardware limits level select: 0=normal open, 1=normal closed
AP_OPZIONI19  =Torque Enable alert option.  The Torque Enable signal is monitored during axis motion.
AP_OPZIONI20  =Opt: brake equipped axis.  When the axis is not referenced inside ISO blocks, the corresponding PLC synchronization is not performed, even if the axis belongs to the contouring axes pool.
AP_OPZIONI21  =Opz: zone-based cross-axes compensation (see Index of master axis to be used for Zone-based cross-axes compensation)
AP_OPZIONI22  =If = 1 at the end of the Homing procedure the axis will be moved to the specified "Parking Quota". The movement will be done at the configured Homing Parking Feed.
AP_OPZIONI23  =If = 1 enables the Offset auto-compensation on the NC Velocity Analog Output. The procedure works as follow:\nEvery time that the drive is enabled the NC will force a null velocity command neutralizing the eventual motor drift applying an adequate voltage offset on the related analog output.
AP_OPZIONI24  =Enable Plasma Cut Torch automatic distance compensation
AP_OPZIONI25  = If = 1 indicates that the axis is the Master of a Gantry pair. Throught the "Slave Gantry Axes Index Table"  will be possible to define the Slave axis and the characteristics of the Gantry association.
AP_OPZIONI26  =Option: enable display distance from target position with sign (0= distance unsigned)
AP_OPZIONI27  =Extended resolution 0.0001 [mm] o [°]
AP_OPZIONI28  =Opz: zone-based cross-axes compensation 2 (see Index of master axis to be used for Zone-based cross-axes compensation)
AP_OPZIONI31  =Axes in Simulated mode enabling options: 0- (Default) - Reading from Encoder  1- Simulation enabled
AP_FWERR      =Maximum follow error (impulses): maximum follow error tolerated beyond which an alarm signal is generated.  The maximum admitted value can be determined by dividing the number of DAC units of the axis by the P-gain setting.
AP_FWERRVLIM  =Follow error limit speed [mm/min]: Maximum reference speed required to monitor a follow error of the proportional type. If 0, follow error monitoring will be the absolute type
AP_TOLLER     =Tolerance control timer [s]: time available to recover the follow error at the end of positioning
AP_TOLLERG    =Rough tolerance target [mm]: this is the accepted tolerance on the end of positioning in fast mode
AP_TOLLERF    =Fine tolerance target [mm]: this is the accepted tolerance on the end of positioning in feed mode
AP_VELMAX     =Maximum feed [mm/min]
AP_VELRAP     =Same as Maximum feed but does not influence the output voltage scaling in case of an analog interface axis. It also applies to the task space rather than joint space when a kinematics transformation is active.  If 0, the same value as Maximum Feed is used.
AP_GAINP      =P Gain: Proportional gain - increase this parameter to increase the promptness with which the axis responds but decrease the stability
AP_GAIND      =D Gain: Derivative gain - increases the promptness of the axes
AP_INFWD      =Feed Forward Gain: Speed gain - reduces the position error during a positioning
AP_INSPOS     =Positive insensitivity voltage [V]: expresses the minimum positive voltage the actuator must be supplied with in order to move the axis.  This parameter can be determined by the servo-driver characteristics.
AP_FATTCONV   =Conversion factor: numerator of the fraction q=n/d, where q is the number of encoder impulses produced within the space of one mm
AP_FATTCONVDIV=Conversion factor: denominator of the fraction q=n/d, where q is the number of encoder impulses produced within the space of one mm; zero value is converted to 1.
AP_QFATTCONVREDUCTION   =Conversion Factor: Numerator of the fraction q=n/d, where q is the space in [mm] corresponding to a d number of pulses
AP_QFATTCONVDIVREDUCTION=Conversion Factor: Denominator of the fraction q=n/d, where q is the space in [mm] corresponding to a d number of pulses
AP_TARTYPE    =Type of sizing: 0-Sizing on the zero mark 1-Sizing on the zero mark and positioning to parking target 2-Immediate sizing 3-Sizing on limit switch 4-Sizing on limit switch and positioning to parking target 10-Encoder StegMann + Sizing on the zero mark 11-Encoder StegMann + Sizing on the zero mark and parking
AP_SUBTARTYPE =CANOpen Homing Sub-Modalities:\n 0 - Standard.\n 1 - Using Servodrive latch feature.
AP_SERCOSREF  =1-homing to negative limit switch \n with zeroing \n negative direction of motion \n2-homing to positive limit switch \n with zeroing \n positive direction of motion \n8-homing to reference switch \n with zeroing \n positive direction of motion \n12-homing to reference switch \n with zeroing \n negative direction of motion \n17-homing to negative limit switch \n without zeroing \n negative direction of motion \n18-homing to negative limit switch \n without zeroing \n positive direction of motion \n24-homing to reference switch \n without zeroing \n negative direction of motion \n28-homing to reference switch \n without zeroing \n negative direction of motion \n33-homing within a single turn \n negative direction of rotation \n34-homing within a single turn \n negative direction of rotation \n35-set reference point at present position
AP_CANOPENREF =CANOpen Homing Type (CiA): 1=LimitSwNeg+Ref.  2=LimitSwPos+Ref.  3,4=HomeSwPos+Ref.  5,6=HomeSwNeg+Ref.  7,8=HomeSwPos+Ref_Forward. 9,10=HomeSwNeg+Ref_Forward.  11,12=HomeSwPos+Ref_Backward.  13,14=HomeSwNeg+Ref_Backward.   Same with no REF pulse: 17=LimitSwNegative.  18=LimitSwPositive.  19,20=HomeSwPos.  21,22=HomeSwNeg.  23,24=HomeSwPos_Forward. 25,26=HomeSwNeg_Forward.  27,28=HomeSwPos_Backward.  29,30=HomeSwNeg_Backward.  33=First_Ref_Backward.  34=First_Ref_Forward.  35=Preset
AP_INSNEG     =Negative insensitive voltage [V]: expresses the minimum negative voltage value the actuator must be supplied with to move the axis.  This parameter can be determined by the servo-driver characteristics.
AP_TARQUOTA   =Sizing target [mm]: absolute position in which the zero reference of the axis is to be found
AP_VELMICRO   =Micro search speed in sizing mode [mm/min]: speed with which the axis searches for the sizing limit switch
AP_VELTACCA   =Marker search speed in sizing mode [mm/min]: speed with which the axis releases the sizing limit switch and searches for the zero mark
AP_MINQUOTA   =Minimum target [mm]: Minimum limit the axis can reach
AP_MAXQUOTA   =Maximum target [mm]: Maximum limit the axis can reach
AP_VELMAN     =Manual speed [mm/min]:speed at which the axis moves in manual mode
AP_MINICS     =Minimum cruise speed that can be imposed during minimum time cruise control [mm/min].
AP_ICSTIME    =Additional constant speed cruise time during minimum time cruise control [s].
AP_DELAYS     =S-curve time [s]: Duration of the non-linear acceleration/deceleration section (0 - linear acceleration/deceleration)
AP_QCHKTARA   =Sizing alarm target [mm]: Maximum distance the axis can cover after having left the sizing limit switch and before meeting zero mark - 0 Disables the option
AP_TIPOTSTENC =Encoder test type: 0) Disabled 1) Enabled
AP_OFFSET     =Maximum offset recovery voltage [V]: Maximum acceptable offset - error is generated if the offset exceeds this value
AP_OFFSETDAC  =Offset , expressed in V, that must be applied to the velocity analog command to neutralize the motor drift. \nCan be used in alternative to the Automatic Offset Compensation procedure.
AP_TIMEOFF    =Offset recovery time [s]: holding time to verify that the axis is really at a standstill
AP_RECQTA     =Play adjustment on reversal target [mm]: Value with which the current position of the axis is corrected each time the axis moves toward a direction opposite of the one used during set-point.  Please set to a value greater than 0 if the encoder lies on the motor, to a less-than-0 value if the encoder lies on the axis.
AP_PARKQTA    =Parking target [mm]: Target the axis must reach at the end of the sizing procedure
AP_EMERTIME   =Emergency ramp time [s]: Time required to set V to 0 if an alarm situation occurs
AP_AXMOD      =Polar axes count module
AP_QTARECG    =Play adjustment target [mm]: Absolute backlash compensation measure.  The backlash compensation is performed EITHER on the zone in which the inertia phenomena occurs OR when the motion direction is opposite to the programmed backlash compensation direction.
AP_TYPERECG   =Type of play adjustment: 0-Disables play adjustment 1- play adjustment forwards 2- play adjustment backwards
AP_TIMCOMDIR  =Direction change timer [s]: indicates the time to wait when (in relation to a positioning command) the direction must be changed
AP_INERZAV    =Forward inertia target [mm]: Expresses (in absolute value ) the distance from the target at which the axis can be considered to have arrived.  Considered only with a forward axis motion.
AP_INERZIND   =Backward inertia target [mm]: Expresses (in absolute value ) the distance from the target at which the axis can be considered to have arrived.  Considered only with a backward axis motion.
AP_TIMERFRENO =Timer for brake management [s]: indicates the time required to engage and disengage the brake (must be set up if the Slave Brake Timing Management option is on)
AP_AXNZONE    =Zone compensation table index: if 0 the zone compensation is not used
AP_AXNZONE_REV=Zone compensation table index for reverse run: if 0 the zone compensation for reverse run is not used
AP_AXNZONE2   =Zone compensation table index 2: if 0 the zone compensation is not used
AP_AXNZONE2_REV=Zone compensation table index 2 for reverse run: if 0 the zone compensation for reverse run is not used
AP_TIMEREG    =Axis control multiplier (0: disable 1: low 2: medium 4: high)
AP_CZSPECIAL  =Special compensation mode. 'No': no special compensation. 'Rcss1.<entity>': determines that the axis is part of a type 1 recessing unit and which part of the unit it is bounded to (either lower Z/programmed Z or upper Z/programmed X). The other unit axis must be specified as the cross-axes compensation master 1 (the cross-axes compensation feature must also be enabled). The cross-axes compensation table index must be the same for both axes and the table pointed to must have the special mode option set to 'rcss1'. 'Rcss2.<entity>': same as Rcss1 but for type 2 recessing unit (either Z/programmed Z or X/programmed X).
AP_CZMASTER   =Master axis to be used for cross-axes compensation (axes configuration table index)
AP_CZMASTER2  =Master axis to be used for cross-axes compensation 2 (axes configuration table index)
AP_ACCEL      =Maximum acceleration [mm/s²];  obtained by dividing the maximum axis feed [mm/s] by the time [s] needed to reach it.
AP_DECEL      =Maximum deceleration [mm/s²];  obtained by dividing the maximum axis feed [mm/s] by the time [s] needed to stop once running at the maximum axis feed.
AP_JERK       =Maximum jerk [mm/s³];  obtained by dividing the maximum axis acceleration/deceleration (the lowest between the two value) [mm/s²] by the time [s] needed to reach it or to reach an uniform motion condition once accelerating/decelerating at the maximum acceleration/deceleration.  A null value causes a trapezoid shaped profile to be generated.
AP_EMERDEC    =Emergency stop deceleration [mm/s²]
AP_KPGAIN     =Kp Proportional Gain [1/s];  establishes the ratio between the feed [mm/s] and the following error [mm].  An increase of this parameter causes an higher system responsiveness and a lower following error, while overshoot increases as a side effect.
AP_KDGAIN     =Kd Derivative Gain;  establishes the ratio between the velocity contibution [mm/s] and the derive of the following error, expressed on the same measure unit.  An increase of this parameter causes a lower overshoot.
AP_KVFFGAIN   =Kvff Velocity Feed Forward Gain;  establishes the ratio between the velocity contribution supplied to the axis and the theorical velocity;  Feed Forward compensation is performed without taking the following error into account.  Values greater than 1 are internally limited to 1.  An increase of this parameter causes a lower following error.  Theorically, a value of 1 causes the Following Error to be completely eliminated.
AP_SSERRK     =K for Maximum following error:  value the theorical following error at the maximum velocity is multiplied by to obtain the real maximum following error value.  The axis overshoot must be considered while setting this parameter.  The maximum recommended value, indicating the maximum admitted overshoot, is 10 divided by the parameter 'Output voltage at maximum speed';  should this limit be overridden, in the case of an overshoot so big it would require an output voltage ranging out of ?0V, the output voltage will be automatically limited to the ?0V range without coming to an immediate emergency stop.  Should the difference between the theorical and the real position override the maximum admitted value which has been determined, an emergency stop will be performed automatically.  If set up to 0 or to a value so that the maximum admitted following error is lower than the 'Maximum following error/tolerance' parameter value, the maximum admitted following error will be determined only by the latter.
AP_SSERR      =Maximum following error/tolerance [mm]:  maximum admitted difference between the real and the theorical following error.  Possible transitory events that may occur at the begin of acceleration phases and the end of deceleration phases must be considered while setting this parameter.  A theorical following error is calculated given the instantaneous theorical velocity and the axis gains.  Should the difference between the theorical and the real following error override the maximum value set up in this parameter, an emergency stop will be performed automatically.  If the parameter 'K for Maximum following error' is set up to 0 or to a value so that the maximum admitted following error is lower than this parameter's value, the maximum admitted following error will NOT depend on the theorical velocity and will be determined only by this parameter, whose meaning will then become that of a Maximum Following Error rather than that of a Following Error Tolerance.  If set up to 0, the maximum admitted following error will NOT depend on the theorical velocity and will be determined by the 'K for Maximum following error' parameter only;  should the latter be set to 0 as well, then NO checks will be performed on the following error at all.
AP_MAXSPEEDLIM=Max speed demand in percentage of the maximum axis velocity. Typically 110%. 0=default (110%).
AP_AXNTORCIA  =Plasma Cut Torch distance regulator parameters table index (0: select Plasma Cut Torch [0])
AP_TORQUE     =Torque reduction value (percentage) referred to the maximum rated torque
AP_AXNGANTRY =It defines the index of the Gantry Table that describes the Gantry control associated to the axis. It has a meaning only if Gantry Axis option has been enabled.
AP_KPGAIN_I  =It allows to define a different Position Loop Proportional Gain , expressed in 1/s, that will be applied by the NC only during Backward movements. If set =0 will be always used the standard Kp.
AP_VELPARK   =It defines the feed , expressed in mm/min, that will be imposed to the axis , after homing, during the parking movement (if configured).
AP_SCALING   =This parameter defines the internal resolution , expressed in um, applied by the NC . Setting it =0 the maximum possible resolution is applied . To increase the axis travel range can be useful to set a wider value  also if this consequently reduces the system resolution.
AP_AXNZONE3   =Zone compensation table index 3: if 0 the zone compensation is not used
AP_AXNZONE3_REV=Zone compensation table index 3 for reverse run: if 0 the zone compensation for reverse run is not used
AP_CZMASTER3  =Master axis to be used for cross-axes compensation 3 (axes configuration table index)
AP_OPZIONI29  =Opz: zone-based cross-axes compensation 3 (see Index of master axis to be used for Zone-based cross-axes compensation)
AP_AXNZONE4   =Zone compensation table index 4: if 0 the zone compensation is not used
AP_AXNZONE4_REV=Zone compensation table index 4 for reverse run: if 0 the zone compensation for reverse run is not used
AP_CZMASTER4  =Master axis to be used for cross-axes compensation 4 (axes configuration table index)
AP_OPZIONI30  =Opz: zone-based cross-axes compensation 4 (see Index of master axis to be used for Zone-based cross-axes compensation)

POL_FWERRVLIM  =Follow error limit speed [°/min]: Maximum reference speed required to monitor a follow error of the proportional type. If 0, follow error monitoring will be the absolute type
POL_TOLLERG    =Rough tolerance target [°]: this is the accepted tolerance on the end of positioning in fast mode
POL_TOLLERF    =Fine tolerance target [°]: this is the accepted tolerance on the end of positioning in feed mode
POL_VELMAX     =Maximum feed [?min]
POL_VELRAP     =Same as Maximum feed but does not influence the output voltage scaling in case of an analog interface axis. It also applies to the task space rather than joint space when a kinematics transformation is active.  If 0, the same value as Maximum Feed is used.
POL_FATTCONV   =Conversion factor: numerator of the fraction q=n/d, where q is the number of encoder impulses produced within the space of one degree
POL_FATTCONVDIV=Conversion factor: denominator of the fraction q=n/d, where q is the number of encoder impulses produced within the space of one degree; zero value is converted to 1.
POL_TARQUOTA   =Sizing target [°]: absolute position in which the zero reference of the axis is to be found
POL_VELMICRO   =Micro search speed in sizing mode [°/min]: speed with which the axis searches for the sizing limit switch
POL_VELTACCA   =Marker search speed in sizing mode [°/min]: speed with which the axis releases the sizing limit switch and searches for the zero mark
POL_MINQUOTA   =Minimum target [°]: Minimum limit the axis can reach
POL_MAXQUOTA   =Maximum target [°]: Maximum limit the axis can reach
POL_VELMAN     =Manual speed [°/min]:speed at which the axis moves in manual mode
POL_QCHKTARA   =Sizing alarm target [°]: Maximum distance the axis can cover after having left the sizing limit switch and before meeting zero mark - 0 Disables the option
POL_RECQTA     =Play adjustment on reversal target [°]: Value with which the current position of the axis is corrected each time the axis moves toward a direction opposite of the one used during set-point.  Please set to a value greater than 0 if the encoder lies on the motor, to a less-than-0 value if the encoder lies on the axis.
POL_PARKQTA    =Parking target [°]: Target the axis must reach at the end of the sizing procedure
POL_QTARECG    =Play adjustment target [°]: Absolute backlash compensation measure.  The backlash compensation is performed EITHER on the zone in which the inertia phenomena occurs OR when the motion direction is opposite to the programmed backlash compensation direction.
POL_ACCEL      =Maximum acceleration [?s²];  obtained by dividing the maximum axis feed [?s] by the time [s] needed to reach it.
POL_DECEL      =Maximum deceleration [?s²];  obtained by dividing the maximum axis feed [?s] by the time [s] needed to stop once running at the maximum axis feed.
POL_JERK       =Maximum jerk [?s³];  obtained by dividing the maximum axis acceleration/deceleration (the lowest between the two values) [mm/s²] by the time [s] needed to reach it or to reach an uniform motion condition once accelerating/decelerating at the maximum acceleration/deceleration.  A null value causes a trapezoid shaped profile to be generated.
POL_EMERDEC    =Emergency stop deceleration [?s²]
POL_KPGAIN     =Kp Proportional Gain [1/s];  establishes the ratio between the feed [?s] and the following error [°].  An increase of this parameter causes an higher system responsiveness and a lower following error, while overshoot increases as a side effect.
POL_KDGAIN     =Kd Derivative Gain;  establishes the ratio between the velocity contibution [?s] and the derive of the following error, expressed on the same measure unit.  An increase of this parameter causes a lower overshoot.
POL_KVFFGAIN   =Kvff Velocity Feed Forward Gain;  establishes the ratio between the velocity contribution supplied to the axis and the theorical velocity;  Feed Forward compensation is performed without taking the following error into account.  Values greater than 1 are internally limited to 1.  An increase of this parameter causes a lower following error.  Theorically, a value of 1 causes the Following Error to be completely eliminated.
POL_SSERRK     =K for Maximum following error:  value the theorical following error at the maximum velocity is multiplied by to obtain the real maximum following error value.  The axis overshoot must be considered while setting this parameter.  The maximum recommended value, indicating the maximum admitted overshoot, is 10 divided by the parameter 'Output voltage at maximum speed';  should this limit be overridden, in the case of an overshoot so big it would require an output voltage ranging out of ?0V, the output voltage will be automatically limited to the ?0V range without coming to an immediate emergency stop.  Should the difference between the theorical and the real position override the maximum admitted value which has been determined, an emergency stop will be performed automatically.  If set up to 0 or to a value so that the maximum admitted following error is lower than the 'Maximum following error/tolerance' parameter value, the maximum admitted following error will be determined only by the latter.
POL_SSERR      =Maximum following error/tolerance [°]:  maximum admitted difference between the real and the theorical following error.  Possible transitory events that may occur at the begin of acceleration phases and the end of deceleration phases must be considered while setting this parameter.  A theorical following error is calculated given the instantaneous theorical velocity and the axis gains.  Should the difference between the theorical and the real following error override the maximum value set up in this parameter, an emergency stop will be performed automatically.  If the parameter 'K for Maximum following error' is set up to 0 or to a value so that the maximum admitted following error is lower than this parameter's value, the maximum admitted following error will NOT depend on the theorical velocity and will be determined only by this parameter, whose meaning will then become that of a Maximum Following Error rather than that of a Following Error Tolerance.  If set up to 0, the maximum admitted following error will NOT depend on the theorical velocity and will be determined by the 'K for Maximum following error' parameter only;  should the latter be set to 0 as well, then NO checks will be performed on the following error at all.
POL_VELPARK   =It defines the feed , expressed in °/min, that will be imposed to the axis , after homing, during the parking movement (if configured).

SP_ACCTIME    =Time required to reach VLim =VMax
SP_DECTIME    =Time required to switch from VLim to V =0
SP_OPZIONI0   =Sizing direction reversal option: 0-(Default) FORWARD SET-POINT - CNC will wait for slow down switch to be reached moving the axis backward, then wait for BOTH the same switch to be released AND the encoder 0-notch to be reached moving the axis forward.  1- BACKWARD SET-POINT:  The same as in FORWARD SET-POINT but considering all axis movements exchanged.
SP_OPZIONI1   =Counting direction reversal option: 0-Default 1-inverts the counting direction of the encoder
SP_OPZIONI2   =Analog sign reversal option: 0- Default  1- inverts the motor-tachymetry connection
SP_OPZIONI3   =Tolerance alarm disabling option: if activated, inhibits alarm generation if the axis terminates the positioning without complying with the tolerance value
SP_OPZIONI4   =Mark level monitoring disabling option: Not Used
SP_OPZIONI10  =ABSOLUTE sizing enabling option: if set the sizing target will coincide with the last target sampled
SP_OPZIONI11  =DAC_POS +/- 0/10V management enabling option: if set, the DAC converter will always supply positive voltage values within the 0..+10 range and the sign in a programmed digital output (1 has the meaning of +, 0 has the meaning of -)
SP_OPZIONI12  =DAC POS bit sign reversal option:  when set to 1, the meaning of the sign bit is inverted, thus, 0 means + and 1 means -
SP_OPZIONI15  =OnMotor Management via PLC enabling option: 0 - (Default) - the drive is enabled by the Slave 1- The handling of the Torque Enable signal is completely up to PLC.
SP_OPZIONI31  =Axes in simulated mode enabling option: 0- (Default) - Reading from Encoder  1- Simulation enabled
SP_FWERR      =Maximum follow error (impulses):maximum follow error tolerated beyond which an alarm signal is generated
SP_FWERRVLIM  =Follow error limit speed [rpm]: Maximum reference speed required to monitor a follow error of a proportional type. If 0, follow error monitoring will be the absolute type
SP_TOLLER     =Tolerance monitoring hold time [s]: time available to take up the follow error at the end of positioning
SP_TOLLERG    =Rough tolerance target [°]: this is the tolerance accepted at end of positioning in fast mode
SP_TOLLERF    =Fine tolerance target [°]: this is the tolerance accepted at end of positioning in feed mode
SP_VELMAX     =Maximum rotation speed [rpm]
SP_VELRAP     =Same as Maximum feed but does not influence the output voltage scaling in case of an analog interface axis. It also applies to the task space rather than joint space when a kinematics transformation is active.  If 0, the same value as Maximum Feed is used.
SP_GAINP      =P Gain: Proportional gain - increase this parameter to increase the promptness with which the axis responds but decrease the stability
SP_GAIND      =D Gain: Derivative gain - increases the promptness of the axes
SP_INFWD      =Feed Forward Gain: Speed gain - reduces the position error during a positioning
SP_INSPOS     =Positive insensitivity voltage [V]: expresses the minimum positive voltage the actuator must be supplied with in order to move the axis.  This parameter can be determined by the servo-driver characteristics.
SP_FATTCONV   =Number of encoder pulses/rev: this is the number of encoder impulses within one revolution
SP_TARTYPE    =Type of sizing: 0-Sizing on the zero mark 1-Sizing on the zero mark and positioning to parking target 2-Immediate sizing 3-Sizing on limit switch 4-Sizing on limit switch and positioning to parking target
SP_INSNEG     =Negative insensitive voltage [V]: expresses the minimum negative voltage value the actuator must be supplied with to move the axis.  This parameter can be determined by the servo-driver characteristics.
SP_TARQUOTA   =Sizing target [°]: absolute position at which the zero reference of the axis is found
SP_VELMICRO   =Micro search speed in sizing mode [rpm]: speed with which the axis searches for the sizing limit switch
SP_VELTACCA   =Marker search speed in sizing mode [rpm]: speed with which the axes releases the sizing limit switch and searches for zero mark
SP_VEL10V     =Motor speed 10 Volts [rpm]: Maximum rotation speed the spindle motor can reach
SP_ENCTYPE    =Encoder mechanical link type:  (1) to motor or (0) to spindle
SP_N1         =Range1 transmission ratio: indicates the transmission ratio between motor and spindle in range 1 (1.000=ratio 1:1    2.000=ratio 1:2)
SP_N2         =Range2 transmission ratio: indicates the transmission ratio between motor and spindle in range 2 (1.000=ratio 1:1    2.000=ratio 1:2)
SP_N3         =Range3 transmission ratio: indicates the transmission ratio between motor and spindle in range 3 (1.000=ratio 1:1    2.000=ratio 1:2)
SP_N4         =Range4 transmission ratio: indicates the transmission ratio between motor and spindle in range 4 (1.000=ratio 1:1    2.000=ratio 1:2)
SP_VELND      =Hunting speed [rpm]: rotation speed used for the hunting movements required to facilitate range engagement
SP_VELLIM1    =Range1 limit speed [rpm]: Rotation limit speed for range 1
SP_VELLIM2    =Range2 limit speed [rpm]: Rotation limit speed for range 2
SP_VELLIM3    =Range3 limit speed [rpm]: Rotation limit speed for range 3
SP_VELLIM4    =Range4 limit speed [rpm]: Rotation limit speed for range 4
SP_VELLTOL    =Speed tolerance at running rate (%): Maximum tolerated percentage deviation for the spindle in relation to set speed
SP_FLT        =Maximum fluctuation (%): Percentage deviation the spindle is allowed in relation to instantaneous speed
SP_VELMIN     =Minimum fluctuation control speed [rpm]: Spindle speed above which fluctuation control is activated with alarm
SP_VELSTOP    =Spindle at standstill speed tolerance : Speed below which the PLC is informed that the spindle is at a standstill (as % of the rotation speed obtained with a 10V analog output)
SP_VELJOG     =Spindle speed in manual mode [rpm]: Speed selected for the spindle in manual mode
SP_VELM19     =Spindle speed in positioning mode [rpm]: Speed selected for the spindle in positioning mode
SP_EMERTIME   =Emergency ramp time [s]: Time required to set V to 0 if an alarm situation occurs
SP_TIMEREG    =Axis control multiplier (0: disable 1: low 2: medium 4: high)
SP_TIPOTSTENC =Encoder test type: 0) Disabled 1) Enabled
SP_QCHKTARA   =Sizing alert measure [°]:  maximum travel the axis is allowed to run, once having released the sizing switch, to reach the zero notch - 0 disables this feature.  Should the value be not an exact multiple of 360, the value would be internally approximated to the next 360 multiple (e.g.:  a value of 361 will have the same effect as 720)
SP_ACCEL      =Maximum acceleration [rev/s²];  obtained by dividing the maximum revolution speed [rev/s] by the time [s] needed to reach it.
SP_DECEL      =Maximum deceleration [rev/s²];  obtained by dividing the maximum revolution speed [rev/s] by the time [s] needed to to stop once running at the maximum revolution speed.
SP_EMERDEC    =Emergency stop deceleration [rev/s²]
SP_KPGAIN     =Kp Proportional Gain [1/s];  establishes the ratio between the feed [rev/s] and the following error [rev].  An increase of this parameter causes an higher system responsiveness and a lower following error, while overshoot increases as a side effect.
SP_KDGAIN     =Kd Derivative Gain;  establishes the ratio between the velocity contibution [rev/s] and the derive of the following error, expressed on the same measure unit.  An increase of this parameter causes a lower overshoot.
SP_KVFFGAIN   =Kvff Velocity Feed Forward Gain;  establishes the ratio between the velocity contribution supplied to the axis and the theorical velocity;  Feed Forward compensation is performed without taking the following error into account.  Values greater than 1 are internally limited to 1.  An increase of this parameter causes a lower following error.  Theorically, a value of 1 causes the Following Error to be completely eliminated.
SP_SSERRK     =K for Maximum following error:  value the theorical following error at the maximum velocity is multiplied by to obtain the real maximum following error value.  The axis overshoot must be considered while setting this parameter.  The maximum recommended value, indicating the maximum admitted overshoot, is 10 divided by the parameter 'Output voltage at maximum speed';  should this limit be overridden, in the case of an overshoot so big it would require an output voltage ranging out of ?0V, the output voltage will be automatically limited to the ?0V range without coming to an immediate emergency stop.  Should the difference between the theorical and the real position override the maximum admitted value which has been determined, an emergency stop will be performed automatically.  If set up to 0 or to a value so that the maximum admitted following error is lower than the 'Maximum following error/tolerance' parameter value, the maximum admitted following error will be determined only by the latter.
SP_SSERR      =Maximum following error/tolerance [rev]:  maximum admitted difference between the real and the theorical following error.  Possible transitory events that may occur at the begin of acceleration phases and the end of deceleration phases must be considered while setting this parameter.  A theorical following error is calculated given the instantaneous theorical velocity and the axis gains.  Should the difference between the theorical and the real following error override the maximum value set up in this parameter, an emergency stop will be performed automatically.  If the parameter 'K for Maximum following error' is set up to 0 or to a value so that the maximum admitted following error is lower than this parameter's value, the maximum admitted following error will NOT depend on the theorical velocity and will be determined only by this parameter, whose meaning will then become that of a Maximum Following Error rather than that of a Following Error Tolerance.  If set up to 0, the maximum admitted following error will NOT depend on the theorical velocity and will be determined by the 'K for Maximum following error' parameter only;  should the latter be set to 0 as well, then NO checks will be performed on the following error at all.
SP_TPACC      =Hunting acceleration and deceleration time [s]: referred to the hunting speed
SP_TPAVA      =Hunting forward movement time [s]
SP_TPIND      =Hunting backward movement time [s]
SP_REVO_HR    =Resolution 0.001 for [Rev] and [RPM]

NV_OPZIONI0   =Sizing direction reversal option: 0-(Default) FORWARD SET-POINT - CNC will wait for slow down switch to be reached moving the axis backward, then wait for BOTH the same switch to be released AND the encoder 0-notch to be reached moving the axis forward.  1- BACKWARD SET-POINT:  The same as in FORWARD SET-POINT but considering all axis movements exchanged.
NV_OPZIONI1   =Counting direction reversal option: 0-Default 1-inverts the counting direction of the encoder
NV_OPZIONI3   =Tolerance alarm disabling option: if activated, inhibits alarm generation if the axis terminates position without complying with the tolerance value
NV_OPZIONI4   =Marker level monitoring disabling option: not used
NV_OPZIONI5   =Vout control for SLV commands disabling option: to set if verification that the processing speed set by the program does not exceed the dynamic limits of the axes has been accomplished externally
NV_OPZIONI6   =Hardware limits enabling option: to set if the signals of the limit switches supplied by the PLC are used to block the axis
NV_OPZIONI10  =ABSOLUTE sizing enabling option: if set, the sizing target will coincide with the last target sampled
NV_OPZIONI13  =Slave brake timing management enabling option: 0-(Default) brake timing is managed by the PLC 1-brake timing is managed by the slave
NV_OPZIONI14  =Bumper management via input enabling option: 0-(Default) the input is managed by the PLC 1-the input is directly managed by the slave
NV_OPZIONI18  =Hardware limits level select: 0=normal open, 1=normal closed
NV_OPZIONI26  =Option: enable display distance from target position with sign (0= distance unsigned)
NV_OPZIONI31  =Axes in simulated mode enabling option: 0-(Default) Reading from encoder 1-Simulation enabled
NV_TOLLERG    =Rough tolerance target [mm]: this is the tolerance accepted at the end of positioning in fast mode
NV_TOLLER     =Tolerance timer [s]: time beyond which an alarm is generated if axis positioning is not within tolerance
NV_VELMAX     =Maximum speed: Speed Number
NV_FATTCONV   =Conversion factor: numerator of the fraction q=n/d, where q is the number of encoder impulses produced within the space of one mm
NV_FATTCONVDIV=Conversion factor: denominator of the fraction q=n/d, where q is the number of encoder impulses produced within the space of one mm; zero value is converted to 1.
NV_TARTYPE    =Type of sizing: 0-Sizing on the zero mark 1-Sizing on the zero mark and positioning to parking target 2-Immediate sizing 3-Sizing on limit switch 4-Sizing on limit switch and positioning to parking target
NV_TARQUOTA   =Sizing target [mm]: absolute position at which the zero reference of the axis is to be found
NV_VELMICRO   =Micro search speed in sizing mode: speed with which the axis searches for the sizing limit switch
NV_VELTACCA   =Marker search speed in sizing mode: speed with which the axis releases the sizing limit switch and searches for the zero mark
NV_MINQUOTA   =Minimum target [mm]: Minimum limit the axis can reach
NV_MAXQUOTA   =Maximum target [mm]: Maximum limit the axis can reach
NV_VELMAN     =Manual speed: speed at which the axis moves in manual mode
NV_QCHKTARA   =Sizing alarm target [mm]: Maximum distance the axis can cover after having left the sizing limit switch and before meeting the zero mark 0-Disables the option
NV_TIPOTSTENC =Encoder test type: 0) Disabled 1) Enabled
NV_PARKQTA    =Parking target [mm]: target reached by the axis at the end of the sizing procedure
NV_DECV1AVA   =V2->V1 forward change target [mm]: expresses the distance from the target at which V2->V1 forward speed changes
NV_DECV2AVA   =V3->V2 forward change target [mm]: expresses the distance from the target at which V3->V2 forward speed changes
NV_DECV1IND   =V2->V1 backward change target [mm]: expresses the distance from the target at which V2->V1 backward speed changes
NV_DECV2INV   =V3->V2 backward change target [mm]: expresses the distance from the target at which V3->V2 backward speed changes
NV_DECSOGV1   =Whole V2->V1 change limit target [mm]: expresses the minimum target at which speed V2 must remain before switching to V1
NV_DECSOGV2   =Whole V3->V2 change limit target [mm]: expresses the minimum target at which speed V3 must remain before switching to V2
NV_TIMCOMVEL  =Speed commutation timer [s]: hold time when the speed must be commutated without changing direction
NV_TIMCOMDIR  =Direction commutation timer [s]: time that must be waited when the direction must be changed in a positioning (also used in play adjustment)
NV_QTARECG    =Play adjustment target [mm]: Absolute backlash compensation measure.  The backlash compensation is performed EITHER on the zone in which the inertia phenomena occurs OR when the motion direction is opposite to the programmed backlash compensation direction.
NV_TYPERECG   =Type of play adjustment: 0-Play adjustment disabled 1-play adjustment forwards 2- play adjustment backwards
NV_INERZAV    =Forward inertia target [mm]: Expresses (in absolute value) the distance from the target at which the axis can be considered to have arrived
NV_INERZIND   =Backward inertia target [mm]: Expresses (in absolute value) the distance from the target at which the axis can be considered to have arrived
NV_TIMERFRENO =Timer for brake management [s]: indicates the time required to engage and disengage the brake (must be set up if the Slave Brake Timing Management option is on)
NV_TIMEREG    =Axis control multiplier (0: disable 1: low 2: medium 4: high)

PT_ACCTIME    =Time required to reach VLim =VMax
PT_DECTIME    =Time required to switch from VLim to V =0
PT_OPZIONI0   =Sizing direction reversal option: 0-(Default) FORWARD SET-POINT - CNC will wait for slow down switch to be reached moving the axis backward, then wait for BOTH the same switch to be released AND the encoder 0-notch to be reached moving the axis forward.  1- BACKWARD SET-POINT:  The same as in FORWARD SET-POINT but considering all axis movements exchanged.
PT_OPZIONI1   =Counting direction reversal option: 0-Default 1-inverts the counting direction of the encoder
PT_OPZIONI2   =Analog sign reversal option: 0-Default 1-Inverts the motor-tachymetry connection
PT_OPZIONI3   =Tolerance alarm disabling option: 1-Disables alarm generation if the axis terminates positioning without complying with the tolerance target
PT_OPZIONI4   =Marker level monitoring disabling option: Not Used
PT_OPZIONI5   =VOUT disabling option for SLV commands:0-(Default) monitoring enabled 1-if verification that the processing speed set by the program does not exceed the dynamic limits of the axes has been accomplished externally
PT_OPZIONI6   =Hardware limit enabling option: 1-if the signals of the limit switches supplied by the PLC are used to block the axis
PT_OPZIONI9   =Play adjustment direction reversal option: 0-Default 1-Inverts the play adjustment direction which is in keeping with the sizing direction by default
PT_OPZIONI10  =ABSOLUTE sizing enabling option: 1-Allows sizing to coincide with the last target sampled
PT_OPZIONI11  =DAC_POS +/- 0/10V management enabling option: if set, the DAC converter will always supply positive voltage values within the 0..+10 range and the sign in a programmed digital output (1 has the meaning of +, 0 has the meaning of -)
PT_OPZIONI12  =DAC POS bit sign reversal option:  when set to 1, the meaning of the sign bit is inverted, thus, 0 means + and 1 means -
PT_OPZIONI13  =Slave Brake Timing Management enabling option: 0-(Default) brake timing is managed by the PLC  1- brake timing is managed by the slave
PT_OPZIONI14  =Bumper Management via Input enabling option: 0-(Default) the input is managed by the PLC 1-The input is directly managed by the slave
PT_OPZIONI15  =OnMotor Management via PLC enabling option: 0-(Default) the drive is enabled by the slave 1-The PLC must activate the physical output where the ON_MOTORE has been declared
PT_OPZIONI16  =Close Loop via PLC disabling option: 0- Default - ORDM M_CHAN handshake 1-The Slave does not wait for the handshake from the PLC to torque the axis when this must be moved (PressBend)
PT_OPZIONI18  =Hardware limits level select: 0=normal open, 1=normal closed
PT_OPZIONI31  =Axes in simulated mode enabling option: 0-(Default) Reading from encoder 1- Simulation enabled
PT_FWERR      =Maximum follow error (impulses): Maximum tolerated follow error beyond which an alarm signal is generated
PT_FWERRVLIM  =Follow error limit speed [mm/min]: Maximum reference speed required to monitor a follow error of the PROPORTIONAL type
PT_TOLLER     =Tolerance monitoring hold time [s]: time available for follow error adjustment at the end of positioning
PT_TOLLERG    =Rough tolerance target [mm]: this is the tolerance accepted at the end of positioning in fast mode
PT_TOLLERF    =Fine tolerance target [mm]: this is the tolerance accepted at the end of positioning in feed mode
PT_VELMAX     =Maximum feed [mm/min]
PT_VELRAP     =Same as Maximum feed but does not influence the output voltage scaling in case of an analog interface axis. It also applies to the task space rather than joint space when a kinematics transformation is active.  If 0, the same value as Maximum Feed is used.
PT_GAINP      =P Gain: Proportional gain - increase this parameter to increase the promptness with which the axis responds but decrease the stability
PT_GAIND      =D Gain: Derivative gain - increases the promptness of the axes
PT_GAINFWD    =Feed Forward Gain: Speed gain - reduces the position error during a positioning
PT_INSPOS     =Positive insensitivity voltage [V]: expresses the minimum positive voltage value the actuator must be supplied with in order to move the axis.  This parameter can be determined by the servo-driver characteristics.
PT_FATTCONV   =Conversion factor: numerator of the fraction q=n/d, where q is the number of encoder impulses produced within the space of one mm
PT_FATTCONVDIV=Conversion factor: denominator of the fraction q=n/d, where q is the number of encoder impulses produced within the space of one mm; zero value is converted to 1.
PT_TARTYPE    =Type of sizing: 0-Sizing on the zero mark 1-Sizing on the zero mark and positioning to parking target 2-Immediate sizing 3-Sizing on limit switch 4-Sizing on limit switch and positioning to parking target
PT_INSNEG     =Negative insensitivity voltage [V]: expresses the minimum negative voltage value the actuator must be supplied with in order to move the axis.  This parameter can be determined by the servo-driver characteristics.
PT_TARQUOTA   =Sizing target [mm]: absolute position in which the axis finds the zero reference of the axis
PT_VELMICRO   =Micro search speed in sizing mode [mm/min]:speed with which the axis searches for the sizing limit switch
PT_VELTACCA   =Marker search speed in sizing mode [mm/min]:speed with which the axis releases the sizing limit switch and searches for the zero mark
PT_MINQUOTA   =Minimum target [mm]:Minimum limit the axis can reach
PT_MAXQUOTA   =Maximum limit [mm]:Maximum limit the axis can reach
PT_VELMAN     =Manual speed [mm/min]:speed at which the axis moves in manual mode
PT_PARKQTA    =Parking target [mm]:Target the axis must reach at the end of the sizing procedure
PT_EMERTIME   =Emergency ramp time [s]:Time required to set V to 0 if an alarm situation occurs
PT_TIMEREG    =Axis control multiplier (0: disable 1: low 2: medium 4: high)
PT_TIPOTSTENC =Encoder test type: 0) Disabled 1) Enabled
PT_ACCEL      =Maximum acceleration [mm/s²];  obtained by dividing the maximum axis feed [mm/s] by the time [s] needed to reach it.
PT_DECEL      =Maximum deceleration [mm/s²];  obtained by dividing the maximum axis feed [mm/s] by the time [s] needed to to stop once running at the maximum axis feed.
PT_EMERDEC    =Emergency stop deceleration [mm/s²]]
PT_KPGAIN     =Kp Proportional Gain [1/s];  establishes the ratio between the feed [mm/s] and the following error [mm].  An increase of this parameter causes an higher system responsiveness and a lower following error, while overshoot increases as a side effect.
PT_KDGAIN     =Kd Derivative Gain;  establishes the ratio between the velocity contibution [mm/s] and the derive of the following error, expressed on the same measure unit.  An increase of this parameter causes a lower overshoot.
PT_KVFFGAIN   =Kvff Velocity Feed Forward Gain;  establishes the ratio between the velocity contribution supplied to the axis and the theorical velocity;  Feed Forward compensation is performed without taking the following error into account.  Values greater than 1 are internally limited to 1.  An increase of this parameter causes a lower following error.  Theorically, a value of 1 causes the Following Error to be completely eliminated.
PT_SSERRK     =K for Maximum following error:  value the theorical following error at the maximum velocity is multiplied by to obtain the real maximum following error value.  The axis overshoot must be considered while setting this parameter.  The maximum recommended value, indicating the maximum admitted overshoot, is 10 divided by the parameter 'Output voltage at maximum speed';  should this limit be overridden, in the case of an overshoot so big it would require an output voltage ranging out of ?0V, the output voltage will be automatically limited to the ?0V range without coming to an immediate emergency stop.  Should the difference between the theorical and the real position override the maximum admitted value which has been determined, an emergency stop will be performed automatically.  If set up to 0 or to a value so that the maximum admitted following error is lower than the 'Maximum following error/tolerance' parameter value, the maximum admitted following error will be determined only by the latter.
PT_SSERR      =Maximum following error/tolerance [mm]:  maximum admitted difference between the real and the theorical following error.  Possible transitory events that may occur at the begin of acceleration phases and the end of deceleration phases must be considered while setting this parameter.  A theorical following error is calculated given the instantaneous theorical velocity and the axis gains.  Should the difference between the theorical and the real following error override the maximum value set up in this parameter, an emergency stop will be performed automatically.  If the parameter 'K for Maximum following error' is set up to 0 or to a value so that the maximum admitted following error is lower than this parameter's value, the maximum admitted following error will NOT depend on the theorical velocity and will be determined only by this parameter, whose meaning will then become that of a Maximum Following Error rather than that of a Following Error Tolerance.  If set up to 0, the maximum admitted following error will NOT depend on the theorical velocity and will be determined by the 'K for Maximum following error' parameter only;  should the latter be set to 0 as well, then NO checks will be performed on the following error at all.

