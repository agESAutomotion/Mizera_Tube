:
; THIS ROUTINE IS USED TO MOVE X3 ACCORDING 
; TO THE POST PROCESSOR POSITION, AND AVOID COLLISION WITH THE HEAD
; ATTENTION!! IT doesn't consider the size of the spindle itself,
;             it is demand to the post processor aticollision  

DBL Slave_2_W_Pos = VA0
DBL WorkMode = VA1

DBL Limit_W_OtherSide = %SPINDLE_SYSTEM.values17/1000 ; 

  IF(Slave_2_W_Pos < 0) THEN ;w axis is at right side of head, L1 should down
    ?%gIso29.2=1
    M339
  ENDIF
; tubeState = 1   ; tube is closed already on three spindle
; tubeState = 2   ; tube is closed already first two spindles
; tubeState = 3   ; tube is closed already last two spindles

IF ((%USR_M20.3) && (%USR_M20.1) && (%USR_M21.22)) tubeState = 1
IF ((%USR_M20.3) && (!%USR_M20.1) && (%USR_M21.22)) tubeState = 2
IF ((!%USR_M20.3) && (%USR_M20.1) && (%USR_M21.22)) tubeState = 3

  G153
  IF (AEXISTS(3,V)) G4005 S(AXIDX(3,V))     
  G4099

  IF (AEXISTS(3,W)) G4010 M(AXIDX(V)) S(AXIDX(3,W)) I1
  G4099
  G152
  
  ; Important to connect the axis before this IF evaluation
  SYN

  IF ((WorkMode == 2) || (WorkMode == 3) ) THEN
  
   IF ( ((QCALC(V) - Slave_2_W_Pos) > 0) && (WorkMode == 2)  ) THEN   
      G4005 S(AXIDX(3,X))     
      G4099
      G153
	  IF (AEXISTS(3,W)) G4010 M(AXIDX(V)) S(AXIDX(3,X)) I0
	  IF (WorkMode == 3) THEN
	      G4010 M(AXIDX(V)) S(AXIDX(3,V)) I0
	  ENDIF
      G4099
      G152 
   ENDIF   
   
  ENDIF  
  
  IF ((WorkMode == 4) && (tubeState == 1)) THEN
  
	 G4010 M(AXIDX(V)) S(AXIDX(3,W)) I1
	 G4010 M(AXIDX(V)) S(AXIDX(3,X)) I0 
	 G4010 M(AXIDX(V)) S(AXIDX(3,V)) I0 
	 G4099
	 
  ENDIF
  
  IF ((WorkMode == 4) && (tubeState == 3)) THEN
  
	 G4010 M(AXIDX(V)) S(AXIDX(3,W)) I1
	 G4010 M(AXIDX(V)) S(AXIDX(3,V)) I0 
	 G4099
	 
  ENDIF
  
  MSGOUT"Slave_2_W_Pos="Slave_2_W_Pos " QCALC(V)="QCALC(V) " W_OtherSide="Limit_W_OtherSide
  
  SYN
  ; Park the head, to move spindle on other side of the head
  ;Slave_2_W_Pos is the W position in pgm, QCALC(V) is the current W position
  IF ((Slave_2_W_Pos <= Limit_W_OtherSide) && (QCALC(V) >= Limit_W_OtherSide ) ) THEN
 
    G4005 S(AXIDX(3,Z))
    G4005 S(AXIDX(3,Y))
    G4099
	
    G153
    G4010 M(AXIDX(Y)) S(AXIDX(3,Y)) I1
    G4010 M(AXIDX(Z)) S(AXIDX(3,Z)) I1
    G152
	   
	G153 G0 Z(%ax29.pa22/1000)
	G153 G1 Y(%ax28.pa21/1000) F5000
	
   ; W Movement
    G153 G1 V(Slave_2_W_Pos) F30000 
  
    G153
    IF (AEXISTS(3,W)) G4005 S(AXIDX(3,W))     
    G4099

	G153 G1 Y0 F5000

  ELSEIF ((Slave_2_W_Pos > Limit_W_OtherSide) && (QCALC(V) < Limit_W_OtherSide ) ) THEN

    G4005 S(AXIDX(3,Z))
    G4005 S(AXIDX(3,Y))
    G4099
	
    G153
    G4010 M(AXIDX(Y)) S(AXIDX(3,Y)) I1
    G4010 M(AXIDX(Z)) S(AXIDX(3,Z)) I1
    G152
	   
	G153 G0 Z(%ax29.pa22/1000)
	G153 G1 Y(%ax28.pa21/1000) F5000
	
   ; W Movement
    G153 G1 V(Slave_2_W_Pos) F30000 
  
    G153
    IF (AEXISTS(3,W)) G4005 S(AXIDX(3,W))     
    G4099

	G153 G1 Y0 F5000

  ELSE
  
   ; W Movement
    G153 G1 V(Slave_2_W_Pos) F30000
  
  ENDIF
  
  G4005 S(AXIDX(3,X))
  G4005 S(AXIDX(3,Z))
  G4005 S(AXIDX(3,Y))
  IF (AEXISTS(3,W)) G4005 S(AXIDX(3,W))     
  IF (AEXISTS(3,V)) G4005 S(AXIDX(3,V))    
  G4099
  
RET
