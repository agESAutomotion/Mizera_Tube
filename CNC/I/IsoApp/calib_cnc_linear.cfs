:  
;******************************************************************************
;   CALIB_CNC_LINEAR.CFS
;   ESAutomotion
;   LASER machine
;******************************************************************************
INCLUDE "var_usr.cfs"
                                   
DBL Speed = 4000            ; Feed per G1 posiz. assi 
DBL Attesa = 0.4            ; Attesa tra una posizione e la successiva
DBL StepZ = 0 
DBL cost = 0  
DBL pdsel = 41  
DBL sel                     ; offset calibration tables (for head1 or head2)
DBL angle = 0
          
?%LsIso10.0 = 0                    ;ISO said Sensor Calibration OK

$ CALCULATE DATA FOR CAPACITIVE BEVEL LINEARIZATION...
SYN
?%C26.2=1

IF ( %UnitWork.uxh0.uxh_gTravT == 1 ) sel = 0
IF ( %UnitWork.uxh1.uxh_gTravT == 2 ) sel = 7     

IF( %M33 ) z = 80
;G153 G1 Z((MaxQta_Z)-10) F10000
;G153 G0 A0 B0

SYN
G172 T1 H1 D1       ; Select the head to work with tcp coordinates
G180 D1             ; Convert in absolute coordinates the tip touch points (tcp coordinates)
x = kine_x
y = kine_y


;**************************************
;   bevel 0
;**************************************
angle = 0
G180 X(x) Y(y) Z(z) A(0) B(angle/1000)     ; this update kine_z fr this create the offset
pdsel = 41  
RPT .FUN_ACQ_START, .FUN_ACQ_END, 1

;**************************************
;   bevel 15
;**************************************
SYN
IF( %TsCalib[1].enab == 1 ) THEN
    angle = %TsCalib[1].targ_b_axis
    G180 X(x) Y(y) Z(z) A(0) B(angle/1000)     
    pdsel = 42  
    RPT .FUN_ACQ_START, .FUN_ACQ_END, 1
ENDIF

;**************************************
;   bevel 30
;**************************************
SYN
IF( %TsCalib[2].enab == 1 ) THEN
    angle = %TsCalib[2].targ_b_axis
    G180 X(x) Y(y) Z(z) A(0) B(angle/1000)     
    pdsel = 43  
    RPT .FUN_ACQ_START, .FUN_ACQ_END, 1
ENDIF

;**************************************
;   bevel 45
;**************************************
SYN
IF( %TsCalib[3].enab == 1 ) THEN
    angle = %TsCalib[3].targ_b_axis
    G180 X(x) Y(y) Z(z) A(0) B(angle/1000)     
    pdsel = 44
    RPT .FUN_ACQ_START, .FUN_ACQ_END, 1
ENDIF
   
   
;**************************************
?%ui0.10 = 1            ; calculate the graph coefficients, command for the interface
SYN 
AWAIT(%ui33.11)         ; wait interface receive the commands
?%ui0.10 = 0            ; calculate the graph coefficients, command for the interface

?%C26.2=0       
         
G4 F0.1

G153 G1 Z((MaxQta_Z)-10) F10000
G153 G0 A0 B0

RET


;**************************************

.FUN_ACQ_START

FOR cost=0 TO 19

    IF( cost == 0 ) THEN
        ?%pd_splines[pdsel + sel].pdh_X[cost] = 0
        ?%pd_splines[pdsel + sel].pdh_Y[cost] = 0
    ELSE
        SYN
        IF( %pd_splines[pdsel + sel].pdh_Y[cost] == 0 ) BREAK

        ?%pd_splines[pdsel + sel].pdh_nPoints = cost+1  

        StepZ = %pd_splines[pdsel + sel].pdh_Y[cost] ;;;; Todo test !   * COS(angle/1000)
        
        ;;;;MSGOUT StepZ "angle="angle/1000 "  "COS(angle)
        ;;;;SYN
        ;;;;M0
        G153 G1 X(kine_x) Y(kine_y) Z(touch_pos + StepZ) A(0) B(kine_b) F(Speed)
        G4 F(Attesa)   
        
        SYN
        ; ### Not in SIMulation
        IF( %M33 == 0 ) THEN
            IF( sel == 0) ?%pd_splines[pdsel + sel].pdh_X[cost] = %C120 
            IF( sel == 7) ?%pd_splines[pdsel + sel].pdh_X[cost] = %C132
        ELSE
            ?%pd_splines[pdsel + sel].pdh_X[cost] = (4095 * (%pd_splines[pdsel + sel].pdh_Y[cost]))/ (%LSRCostK[31]/1000)
        ENDIF
    ENDIF
ENDFOR

.FUN_ACQ_END
